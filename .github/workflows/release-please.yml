name: release-please

on:
    push:
        branches:
            - main  # Trigger the workflow on push to the 'main' branch

permissions:
    contents: write  # Allow write access to repository content (for commits, tags)
    pull-requests: write  # Allow write access to manage pull requests

jobs:
    release-please:
        runs-on: ubuntu-latest  # Run the job on the latest Ubuntu runner

        steps:
            # Checkout the code to ensure we work with the latest version
            - uses: actions/checkout@v4

            # Use release-please action to handle versioning
            - uses: googleapis/release-please-action@v4
              id: release
              with:
                  release-type: node  # Using node release type for versioning
                  token: ${{ secrets.RELEASE_PLEASE_TOKEN }}  # Use the release-please token from secrets

            # Create tags for major and minor versions after the release has been created
            - name: Tag major and minor versions
              if: ${{ steps.release.outputs.release_created }}  # Only run this step if a release was created
              run: |
                  # Set Git user configuration for GitHub Actions bot
                  git config user.name github-actions[bot]
                  git config user.email 41898282+github-actions[bot]@users.noreply.github.com
                  git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"

                  # Delete old tags (if they exist) to ensure no conflict with new tags
                  git tag -d v${{ steps.release.outputs.major }} || true
                  git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
                  git push origin :v${{ steps.release.outputs.major }} || true
                  git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true

                  # Create new tags for the major and minor version numbers
                  git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
                  git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"

                  # Push the new tags to the remote repository
                  git push origin v${{ steps.release.outputs.major }}
                  git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}

            # Notify when the release has been successfully created and merged
            - name: Notify of successful release
              if: ${{ steps.release.outputs.release_created == 'true' }}
              run: |
                  echo "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} has been successfully created and merged."

            # Handle failures
            - name: Handle errors
              if: ${{ failure() }}  # Only run if any step fails
              run: |
                  echo "An error occurred during the release process. Please check the logs for more details."
